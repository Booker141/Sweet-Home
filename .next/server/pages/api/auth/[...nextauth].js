"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/[...nextauth]";
exports.ids = ["pages/api/auth/[...nextauth]"];
exports.modules = {

/***/ "@next-auth/mongodb-adapter":
/*!*********************************************!*\
  !*** external "@next-auth/mongodb-adapter" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("@next-auth/mongodb-adapter");

/***/ }),

/***/ "bcrypt":
/*!*************************!*\
  !*** external "bcrypt" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("bcrypt");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "next-auth/providers/google":
/*!*********************************************!*\
  !*** external "next-auth/providers/google" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/google");

/***/ }),

/***/ "next-auth/providers/twitter":
/*!**********************************************!*\
  !*** external "next-auth/providers/twitter" ***!
  \**********************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/twitter");

/***/ }),

/***/ "(api)/./pages/api/auth/[...nextauth].js":
/*!*****************************************!*\
  !*** ./pages/api/auth/[...nextauth].js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"authOptions\": () => (/* binding */ authOptions),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/google */ \"next-auth/providers/google\");\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_auth_providers_twitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-auth/providers/twitter */ \"next-auth/providers/twitter\");\n/* harmony import */ var next_auth_providers_twitter__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_twitter__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _next_auth_mongodb_adapter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @next-auth/mongodb-adapter */ \"@next-auth/mongodb-adapter\");\n/* harmony import */ var _next_auth_mongodb_adapter__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_next_auth_mongodb_adapter__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _lib_MongoDB_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lib/MongoDB.js */ \"(api)/./pages/api/lib/MongoDB.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! bcrypt */ \"bcrypt\");\n/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(bcrypt__WEBPACK_IMPORTED_MODULE_8__);\n\n\n\n\n\n\n\n\n\nconst authOptions = {\n    providers: [\n        next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1___default()({\n            clientId: process.env.GOOGLE_CLIENT_ID,\n            clientSecret: process.env.GOOGLE_CLIENT_SECRET\n        }),\n        next_auth_providers_twitter__WEBPACK_IMPORTED_MODULE_3___default()({\n            clientId: process.env.TWITTER_ID,\n            clientSecret: process.env.TWITTER_SECRET,\n            version: \"2.0\"\n        }),\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2___default()({\n            id: \"credentials\",\n            name: \"Credentials\",\n            async authorize (credentials) {\n                const { email , password  } = credentials;\n                const client = await _lib_MongoDB_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\n                const db = await client.db();\n                if (!email && !password) {\n                    throw new Error(\"Introduzca las credenciales.\");\n                }\n                if (!email) {\n                    throw new Error(\"Introduzca el email.\");\n                }\n                if (!password) {\n                    throw new Error(\"Introduzca la contrase\\xf1a.\");\n                }\n                const user = await db.collection(\"users\").findOne({\n                    email: email\n                });\n                if (!user) {\n                    throw new Error(\"Usuario no encontrado.\");\n                }\n                if (user.status == \"blocked\") {\n                    throw new Error(\"Usuario bloqueado.\");\n                }\n                const isValid = await bcrypt__WEBPACK_IMPORTED_MODULE_8___default().compare(password, user.password);\n                if (!isValid) {\n                    throw new Error(\"Contrase\\xf1a incorrecta.\");\n                }\n                return user;\n            }\n        })\n    ],\n    database: process.env.MONGODB_URI,\n    pages: {\n        signIn: \"/auth/signIn\",\n        error: \"/_error\"\n    },\n    adapter: (0,_next_auth_mongodb_adapter__WEBPACK_IMPORTED_MODULE_4__.MongoDBAdapter)(_lib_MongoDB_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n        databaseName: \"SweetHomeDB\"\n    }),\n    jwt: {\n        secret: process.env.NEXT_AUTH_SECRET\n    },\n    session: {\n        strategy: \"jwt\",\n        maxAge: 3600 * 24,\n        updateAge: 3600 * 24\n    },\n    jwt: {\n        async encode ({ token , secret  }) {\n            const tokenJWT = {\n                id: token.id,\n                state: token.state,\n                email: token.email,\n                username: token.username,\n                status: token.status,\n                role: token.role,\n                biography: token.biography,\n                followers: token.followers,\n                following: token.following,\n                isCaretaker: token.isCaretaker\n            };\n            const codedToken = jsonwebtoken__WEBPACK_IMPORTED_MODULE_7___default().sign(tokenJWT, secret);\n            return codedToken;\n        },\n        async decode ({ token , secret  }) {\n            const decodedToken = jsonwebtoken__WEBPACK_IMPORTED_MODULE_7___default().verify(token, secret);\n            return decodedToken;\n        }\n    },\n    callbacks: {\n        async signIn ({ user , account , profile , credentials  }) {\n            const client = await _lib_MongoDB_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\n            const db = await client.db();\n            const accountExist = await db.collection(\"accounts\").findOne({\n                providerAccountId: account.providerAccountId\n            });\n            const accountExist2 = await db.collection(\"accounts\").findOne({\n                userId: user._id\n            });\n            const userExist = await db.collection(\"users\").findOne({\n                _id: user._id\n            });\n            const userStatus = await db.collection(\"userStatus\").findOne({\n                name: \"activo\"\n            });\n            const userRole = await db.collection(\"userRole\").findOne({\n                name: \"usuario\"\n            });\n            console.log(user);\n            console.log(account);\n            const randomId = new mongodb__WEBPACK_IMPORTED_MODULE_5__.ObjectId();\n            const maxAge = 3600 * 24;\n            const expiryDate = new Date(Date.now() + maxAge * 3000);\n            const token = Math.random().toString(36).substring(2, 120);\n            const token2 = Math.random().toString(36).substring(2, 120);\n            if (account.provider === \"credentials\") {\n                if (!accountExist2) {\n                    const accountInserted = await db.collection(\"accounts\").insertOne({\n                        provider: account.provider,\n                        type: account.type,\n                        access_token: token,\n                        expires_at: expiryDate,\n                        scope: \"user.read\",\n                        token_type: \"Bearer\",\n                        refresh_token: token2,\n                        providerAccountId: account.providerAccountId,\n                        email: user.email,\n                        firstname: user.firstname,\n                        lastname: user.lastname,\n                        username: user.username,\n                        image: user.image,\n                        createdAt: new Date(),\n                        userId: user._id\n                    });\n                    await db.collection(\"users\").updateOne({\n                        _id: user._id\n                    }, {\n                        $set: {\n                            accountId: accountInserted._id\n                        }\n                    });\n                } else {\n                    await db.collection(\"accounts\").updateOne({\n                        userId: user._id\n                    }, {\n                        $set: {\n                            expires_at: expiryDate * 24\n                        }\n                    });\n                    await db.collection(\"users\").updateOne({\n                        _id: user._id\n                    }, {\n                        $set: {\n                            accountId: accountExist2._id\n                        }\n                    });\n                }\n            }\n            if (account.provider === \"google\") {\n                if (!accountExist) {\n                    const accountInserted1 = await db.collection(\"accounts\").insertOne({\n                        provider: account.provider,\n                        type: account.type,\n                        access_token: account.access_token,\n                        expires_at: account.expires_at,\n                        scope: account.scope,\n                        token_type: account.token_type,\n                        refresh_token: account.id_token,\n                        providerAccountId: account.providerAccountId,\n                        email: user.email,\n                        firstname: \"\",\n                        lastname: \"\",\n                        username: user.name,\n                        image: user.image,\n                        createdAt: new Date(),\n                        userId: randomId\n                    });\n                    await db.collection(\"users\").updateOne({\n                        _id: user._id\n                    }, {\n                        $set: {\n                            accountId: accountInserted1._id\n                        }\n                    });\n                    if (!userExist) {\n                        await db.collection(\"users\").insertOne({\n                            _id: randomId,\n                            email: user.email,\n                            firstname: \"\",\n                            lastname: \"\",\n                            username: user.name,\n                            password: \"\",\n                            phone: \"\",\n                            gender: \"\",\n                            birthdate: new Date(\"<2012-12-12>\"),\n                            image: user.image,\n                            status: userStatus,\n                            role: userRole,\n                            createdAt: new Date(),\n                            accountId: account._id,\n                            followers: [],\n                            following: [],\n                            isCaretaker: false\n                        });\n                    } else {\n                        if (accountExist.userId == userExist._id) {\n                            await db.collection(\"users\").updateOne({\n                                _id: userExist._id\n                            }, {\n                                $set: {\n                                    accountId: accountExist._id\n                                }\n                            });\n                        }\n                    }\n                } else {\n                    await db.collection(\"accounts\").updateOne({\n                        _id: accountExist.id\n                    }, {\n                        $set: {\n                            expires_at: account.expires_at * 2\n                        }\n                    });\n                    await db.collection(\"users\").updateOne({\n                        _id: user._id\n                    }, {\n                        $set: {\n                            accountId: accountExist._id\n                        }\n                    });\n                }\n            }\n            if (account.provider === \"twitter\") {\n                if (!accountExist) {\n                    const accountInserted2 = await db.collection(\"accounts\").updateOne({\n                        _id: account.id\n                    }, {\n                        $set: {\n                            provider: account.provider,\n                            type: account.type,\n                            access_token: account.access_token,\n                            expires_at: account.expires_at,\n                            scope: account.scope,\n                            token_type: account.token_type,\n                            refresh_token: account.refresh_token,\n                            providerAccountId: account.providerAccountId,\n                            email: user.email,\n                            firstname: \"\",\n                            lastname: \"\",\n                            username: user.name,\n                            image: user.image,\n                            createdAt: new Date(),\n                            userId: randomId\n                        }\n                    });\n                    await db.collection(\"users\").updateOne({\n                        _id: user._id\n                    }, {\n                        $set: {\n                            accountId: accountInserted2._id\n                        }\n                    });\n                    if (!userExist) {\n                        await db.collection(\"users\").insertOne({\n                            _id: randomId,\n                            email: user.email,\n                            firstname: \"\",\n                            lastname: \"\",\n                            username: user.name,\n                            password: \"\",\n                            phone: \"\",\n                            gender: \"\",\n                            birthdate: new Date(\"<2012-12-12>\"),\n                            image: user.image,\n                            status: userStatus,\n                            role: userRole,\n                            createdAt: new Date(),\n                            accountId: account._id,\n                            followers: [],\n                            following: [],\n                            isCaretaker: false\n                        });\n                    } else {\n                        if (accountExist.userId == userExist._id) {\n                            await db.collection(\"users\").updateOne({\n                                _id: userExist._id\n                            }, {\n                                $set: {\n                                    accountId: accountExist._id\n                                }\n                            });\n                        }\n                    }\n                } else {\n                    await db.collection(\"accounts\").updateOne({\n                        _id: account._id\n                    }, {\n                        $set: {\n                            provider: account.provider,\n                            type: account.type,\n                            access_token: account.access_token,\n                            expires_at: account.expires_at,\n                            scope: account.scope,\n                            token_type: account.token_type,\n                            refresh_token: account.refresh_token,\n                            providerAccountId: account.providerAccountId,\n                            email: user.email,\n                            firstname: user.firstname,\n                            lastname: user.lastname,\n                            username: user.name,\n                            image: user.image,\n                            status: user.status,\n                            role: user.role,\n                            createdAt: user.createdAt,\n                            userId: user._id\n                        }\n                    });\n                }\n                await db.collection(\"users\").updateOne({\n                    _id: user._id\n                }, {\n                    $set: {\n                        accountId: accountExist._id\n                    }\n                });\n            }\n            return true;\n        },\n        async jwt ({ token , user  }) {\n            console.log(user);\n            if (user) {\n                token = {\n                    ...token,\n                    id: user._id,\n                    isCaretaker: user.isCaretaker,\n                    email: user.email,\n                    username: user.username,\n                    biography: user.biography,\n                    followers: user.followers,\n                    following: user.following,\n                    role: user.role.name\n                };\n            }\n            console.log(token);\n            return Promise.resolve(token);\n        },\n        async session ({ session , token  }) {\n            console.log(token);\n            if (token) {\n                session = {\n                    ...session,\n                    user: {\n                        id: token.id,\n                        email: token.email,\n                        username: token.username,\n                        biography: token.biography,\n                        followers: token.followers,\n                        following: token.following,\n                        isCaretaker: token.isCaretaker,\n                        role: token.role\n                    }\n                };\n            }\n            console.log(session);\n            return Promise.resolve(session);\n        }\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (next_auth__WEBPACK_IMPORTED_MODULE_0___default()(authOptions));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/auth/[...nextauth].js\n");

/***/ }),

/***/ "(api)/./pages/api/lib/MongoDB.js":
/*!**********************************!*\
  !*** ./pages/api/lib/MongoDB.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n\nif (!process.env.MONGODB_URI) {\n    throw new Error(\"No se ha podido conectar a la base de datos\");\n}\nconst uri = process.env.MONGODB_URI;\nlet client;\nlet clientPromise;\nif (true) {\n    if (!global._mongoClientPromise) {\n        client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri, {\n            useNewUrlParser: true,\n            useUnifiedTopology: true\n        });\n        global._mongoClientPromise = client.connect();\n    }\n    clientPromise = global._mongoClientPromise;\n} else {}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clientPromise);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvbGliL01vbmdvREIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBRXJDLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUNDLFdBQVcsRUFBRTtJQUU1QixNQUFNLElBQUlDLEtBQUssQ0FBQyw2Q0FBNkMsQ0FBQyxDQUFDO0FBRWpFLENBQUM7QUFFRCxNQUFNQyxHQUFHLEdBQUdKLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxXQUFXO0FBRW5DLElBQUlHLE1BQU07QUFDVixJQUFJQyxhQUFhO0FBRWpCLElBQUlOLElBQXNDLEVBQUU7SUFFMUMsSUFBSSxDQUFDTyxNQUFNLENBQUNDLG1CQUFtQixFQUFFO1FBQy9CSCxNQUFNLEdBQUcsSUFBSU4sZ0RBQVcsQ0FBQ0ssR0FBRyxFQUFFO1lBQUVLLGVBQWUsRUFBQyxJQUFJO1lBQUVDLGtCQUFrQixFQUFDLElBQUk7U0FBRSxDQUFDLENBQUM7UUFDakZILE1BQU0sQ0FBQ0MsbUJBQW1CLEdBQUdILE1BQU0sQ0FBQ00sT0FBTyxFQUFFLENBQUM7SUFDaEQsQ0FBQztJQUVETCxhQUFhLEdBQUdDLE1BQU0sQ0FBQ0MsbUJBQW1CLENBQUM7QUFFN0MsT0FBTyxFQUdOO0FBRUQsaUVBQWVGLGFBQWEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N3ZWV0LWhvbWUvLi9wYWdlcy9hcGkvbGliL01vbmdvREIuanM/MjNhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb25nb0NsaWVudCB9IGZyb20gJ21vbmdvZGInXG5cbmlmICghcHJvY2Vzcy5lbnYuTU9OR09EQl9VUkkpIHtcblxuICB0aHJvdyBuZXcgRXJyb3IoJ05vIHNlIGhhIHBvZGlkbyBjb25lY3RhciBhIGxhIGJhc2UgZGUgZGF0b3MnKTtcbiAgXG59XG5cbmNvbnN0IHVyaSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJO1xuXG5sZXQgY2xpZW50O1xubGV0IGNsaWVudFByb21pc2U7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuXG4gIGlmICghZ2xvYmFsLl9tb25nb0NsaWVudFByb21pc2UpIHtcbiAgICBjbGllbnQgPSBuZXcgTW9uZ29DbGllbnQodXJpLCB7IHVzZU5ld1VybFBhcnNlcjp0cnVlLCB1c2VVbmlmaWVkVG9wb2xvZ3k6dHJ1ZSB9KTtcbiAgICBnbG9iYWwuX21vbmdvQ2xpZW50UHJvbWlzZSA9IGNsaWVudC5jb25uZWN0KCk7XG4gIH1cblxuICBjbGllbnRQcm9taXNlID0gZ2xvYmFsLl9tb25nb0NsaWVudFByb21pc2U7XG5cbn0gZWxzZSB7XG4gIGNsaWVudCA9IG5ldyBNb25nb0NsaWVudCh1cmksIHsgdXNlTmV3VXJsUGFyc2VyOnRydWUsIHVzZVVuaWZpZWRUb3BvbG9neTp0cnVlICB9KTtcbiAgY2xpZW50UHJvbWlzZSA9IGNsaWVudC5jb25uZWN0KCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsaWVudFByb21pc2U7XG4iXSwibmFtZXMiOlsiTW9uZ29DbGllbnQiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09EQl9VUkkiLCJFcnJvciIsInVyaSIsImNsaWVudCIsImNsaWVudFByb21pc2UiLCJnbG9iYWwiLCJfbW9uZ29DbGllbnRQcm9taXNlIiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwiY29ubmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/lib/MongoDB.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/auth/[...nextauth].js"));
module.exports = __webpack_exports__;

})();